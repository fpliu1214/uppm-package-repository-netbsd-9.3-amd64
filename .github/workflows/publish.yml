name: publish

on:
  workflow_dispatch

jobs:

  build1:
    strategy:
      fail-fast: false
      matrix:
        pkg: [aalib, abook, adig, aerc, ag, age, agg, alacritty, alass, algernon, ali, anchor-cli, antibody, apkeep, apr, aptly, archiver, argparse, args, aria2, aribb24, async++, atuin, autoconf-archive, autogen, automake, autossh, autotools-setup, axel, azcopy, b3sum, bandwhich, base16, base64, bash, basis_universal, bat, bazelisk, bc, bcrypt, bear, bgrep, binaryen, bind, binocle, bitcoin, bk, blake3, bmake, botan, bottom, boxes, brook, broot, brpc, bsdtar, bullet, byacc, c-examples, caddy, cargo-c, cargo-deb, catch2, catimg, ccache, cdrtools, cereal, cfitsio, cflow, cgif, chafa, cheat, check, chezmoi, chicken, choose, circleci-cli, cli11, cmake, coreutils, cpio, cppcheck, cppunit, cpuinfo, croc, crosstool-ng, crowbook, ctop, cue, cups, curl, curlie, cxxopts, d2, darkhttpd, dasel, dash, delta, difftastic, diffutils, distcc, dmalloc, dns2tcp, dnsmap, dog, doggo, dolt, dos2unix, dot_static, doxygen, dtc, dua, duf, dufs, dust, e2fsprogs, easyutils, ed, effcee, eigen, elfcat, elvish, epsilon, esbuild, ethereum, exa, exhale, fakeroot]

    steps:
      - uses: cross-platform-actions/action@v0.25.0
        with:
          operating_system: netbsd
          version: 9.3
          shell: bash
          run: |
            run() {
              printf "\033[0;35m==>\033[0m \033[0;32m%b\n\033[0m" "$*"
              eval "$@"
            }

            run sudo sed -i 's/#ETCCERTSDIR=/ETCCERTSDIR=/' /usr/pkg/etc/ca-certificates-dir.conf
            run sudo update-ca-certificates

            run sudo pkgin -y update
            run sudo pkgin -y install curl

            run curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
            run chmod +x ppkg

            run ./ppkg about
            run ./ppkg setup --syspm
            run ./ppkg update
            run ./ppkg install ${{ matrix.pkg }}

            for item in $(./ppkg ls-installed)
            do
                ./ppkg pack "$item"

                PACKAGE_SUMMARY="$(./ppkg info-installed "$item" summary)"
                PACKAGE_WEB_URL="$(./ppkg info-installed "$item" web-url)"
                PACKAGE_VERSION="$(./ppkg info-installed "$item" version)"

                PACKAGE_NAME="${item#*/}"

                PACKAGE_FILENAME="$(ls $PACKAGE_NAME-$PACKAGE_VERSION-*.tar.xz)"

                PACKAGE_BIN_SHA="$(./ppkg run sha256sum "$PACKAGE_FILENAME" | cut -d ' ' -f1)"

                PACKAGE_BIN_URL="https://github.com/${{ github.repository }}/releases/download/@TAGNAME@/$PACKAGE_FILENAME"

                cat > "$PACKAGE_NAME.yml" <<EOF
            summary: $PACKAGE_SUMMARY
            webpage: $PACKAGE_WEB_URL
            version: $PACKAGE_VERSION
            bin-url: $PACKAGE_BIN_URL
            bin-sha: $PACKAGE_BIN_SHA
            EOF
            done

      - run: ls

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg }}
          path: |
            ./*.tar.xz
            ./*.yml

  build2:
    strategy:
      fail-fast: false
      matrix:
        pkg: [fcp, fd, fdroidcl, fff, figlet, findent, findutils, fish, flatbuffers, flock, fnm, fortune, freetype2, frei0r, fselect, fsmon, fswatch, fzf, fzy, g, garble, gat, gawk, gbt, gcc, gcc@12, gdb, gdbm, gdk-pixbuf-tools, gdu, geographiclib, germanium, gettext-tools, gf, gh, ghr, giflib, gindent, git, git-cliff, git-lfs, gitui, gitwatch, glew, glib-tools, glm, glow, glslviewer, glyr, gmake, gn, gnu-barcode, gnu-which, gnupg, gnuplot, go-md2man, go-tools, godu, gogs, golang, golang@1.21, gomobile, google-benchmark, google-highway, goreleaser, gosh, gotop, gotty, gox, gperf, gping, gpsim, gputils, grep, grex, groff, gron, grpc-plugins, gsed, gtime, gts, hashcat, helix, helm, help2man, hexdump, hexyl, htop, htslib, hugo, hunspell, hunter, hurl, hydroxide, hyperfine, ideviceinstaller, imagemagick, incus, invoice, iperf3, itstool, ixwebsocket, jackaudio, jemalloc, jfrog-cli, jj, joshuto, jpeg, jq, json-glib, jump, k9s, kcp, kcptun, ko, krb5, lazygit, lcov, ldns, less, lexbor, lf, libaec, libao, libb2, libb64, libbcrypt, libcaca]

    steps:
      - uses: cross-platform-actions/action@v0.25.0
        with:
          operating_system: netbsd
          version: 9.3
          shell: bash
          run: |
            run() {
              printf "\033[0;35m==>\033[0m \033[0;32m%b\n\033[0m" "$*"
              eval "$@"
            }

            run sudo sed -i 's/#ETCCERTSDIR=/ETCCERTSDIR=/' /usr/pkg/etc/ca-certificates-dir.conf
            run sudo update-ca-certificates

            run sudo pkgin -y update
            run sudo pkgin -y install curl

            run curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
            run chmod +x ppkg

            run ./ppkg about
            run ./ppkg setup --syspm
            run ./ppkg update
            run ./ppkg install ${{ matrix.pkg }}

            for item in $(./ppkg ls-installed)
            do
                ./ppkg pack "$item"

                PACKAGE_SUMMARY="$(./ppkg info-installed "$item" summary)"
                PACKAGE_WEB_URL="$(./ppkg info-installed "$item" web-url)"
                PACKAGE_VERSION="$(./ppkg info-installed "$item" version)"

                PACKAGE_NAME="${item#*/}"

                PACKAGE_FILENAME="$(ls $PACKAGE_NAME-$PACKAGE_VERSION-*.tar.xz)"

                PACKAGE_BIN_SHA="$(./ppkg run sha256sum "$PACKAGE_FILENAME" | cut -d ' ' -f1)"

                PACKAGE_BIN_URL="https://github.com/${{ github.repository }}/releases/download/@TAGNAME@/$PACKAGE_FILENAME"

                cat > "$PACKAGE_NAME.yml" <<EOF
            summary: $PACKAGE_SUMMARY
            webpage: $PACKAGE_WEB_URL
            version: $PACKAGE_VERSION
            bin-url: $PACKAGE_BIN_URL
            bin-sha: $PACKAGE_BIN_SHA
            EOF
            done

      - run: ls

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg }}
          path: |
            ./*.tar.xz
            ./*.yml

  build3:
    strategy:
      fail-fast: false
      matrix:
        pkg: [libcanberra, libcddb, libcdio, libclc, libcroco, libcuefile, libcyaml, libdecor, libdiscid, libdv, libdvdnav, libglob, libgphoto2, libical, libilbc, libimagequant, libirecovery, libisoburn, liblinear, liblo, libmad, libmaxminddb, libmesalink, libmetalink, libmicrohttpd, libmill, libminiz, libminizip-ng, libmms, libmnl, libphonenumber, libpipeline, libpq, libproxy, libqalculate, libraqm, librasterlite, libreplaygain, libressl, librist, librsync, libsigsegv, libsmi, libspectre, libspng, libthai, libtins, libtorrent-rasterbar, libtree, libupnp, libuuid, libuvc, libvidstab, libwebm, libwordexp, libxml2@2.11, libyuv, lighttpd, lima, links, livego, llhttp, llvm@14, llvm@15, llvm@16, llvm@17, llvm@18, lmdb, lnd, lodepng, log4cplus, lolcat, lrzip, lsd, lsof, luau, lunatic, lunzip, lychee, lynx, lzop, magic_enum, makepkg, mawk, mcfly, md4c, mdbook, mdcat, mediainfo, mftrace, midnight-commander, mimalloc, minisign, miniz, mkcert, mkcue, mksh, mm-wiki, mold, mono, moreutils, mosh, mozjpeg, mpdecimal, mpg123, mpir, mpv, msgpack-c, mujs, mupdf, nano, nanomsg, nap, nasm, navi, ncdu, neofetch, nghttp2, nginx, ngtcp2, ninja, nng, nnn, nsh, ntbtls, nushell, oat++, obfs4proxy]

    steps:
      - uses: cross-platform-actions/action@v0.25.0
        with:
          operating_system: netbsd
          version: 9.3
          shell: bash
          run: |
            run() {
              printf "\033[0;35m==>\033[0m \033[0;32m%b\n\033[0m" "$*"
              eval "$@"
            }

            run sudo sed -i 's/#ETCCERTSDIR=/ETCCERTSDIR=/' /usr/pkg/etc/ca-certificates-dir.conf
            run sudo update-ca-certificates

            run sudo pkgin -y update
            run sudo pkgin -y install curl

            run curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
            run chmod +x ppkg

            run ./ppkg about
            run ./ppkg setup --syspm
            run ./ppkg update
            run ./ppkg install ${{ matrix.pkg }}

            for item in $(./ppkg ls-installed)
            do
                ./ppkg pack "$item"

                PACKAGE_SUMMARY="$(./ppkg info-installed "$item" summary)"
                PACKAGE_WEB_URL="$(./ppkg info-installed "$item" web-url)"
                PACKAGE_VERSION="$(./ppkg info-installed "$item" version)"

                PACKAGE_NAME="${item#*/}"

                PACKAGE_FILENAME="$(ls $PACKAGE_NAME-$PACKAGE_VERSION-*.tar.xz)"

                PACKAGE_BIN_SHA="$(./ppkg run sha256sum "$PACKAGE_FILENAME" | cut -d ' ' -f1)"

                PACKAGE_BIN_URL="https://github.com/${{ github.repository }}/releases/download/@TAGNAME@/$PACKAGE_FILENAME"

                cat > "$PACKAGE_NAME.yml" <<EOF
            summary: $PACKAGE_SUMMARY
            webpage: $PACKAGE_WEB_URL
            version: $PACKAGE_VERSION
            bin-url: $PACKAGE_BIN_URL
            bin-sha: $PACKAGE_BIN_SHA
            EOF
            done

      - run: ls

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg }}
          path: |
            ./*.tar.xz
            ./*.yml

  build4:
    strategy:
      fail-fast: false
      matrix:
        pkg: [onefetch, open264, openal-soft, openblas, opencl-icd-loader, opencore-amr, openfst, openimageio, openldap, openlibm, openmpi, openslide, p7zip, packcc, patchelf, pax, pbzip2, pcre, pcre2, pegof, pget, physfs, pigz, pipewire, pixman, pjsip, pkg-config, pkgconf, plog, plzip, pngquant, pocl, poco, pop, ppkg, procs, progress, proj, proto-cli, pup, putty, python3-setup, python@3.10, python@3.11.6, python@3.12, python@3.9, q, qpdf, quiche, quickjs, ragel, rang, ranger, rapidjson, rclone, re2c, redis, restic, resvg, rhash, ripgrep, ripgrep-all, rlwrap, rsass, rsync, rtorrent, rttr, ruff, rust-analyzer, rustup-init, sassc, scc, sccache, sd, shaderc, shc, shell2http, shellcheck, shiori, silicon, simdjson, six, sjpeg, skcms, sl, socat, soundtouch, speex, spirv-tools, sqlite3, srs, srt, starship, stylua, supervisord, suricata, svn-lite, syncthing, sysdig, sysinfo, szip, talloc, tarlz, tbb, tbls, tbox, tcc, tcl-core, tcpdump, tdu, tealdeer, tectonic, tengo, terragrunt, tesseract, test, tig, tinysearch, tinyxml2, tmux, tokei, toml++, toml11, tree, ttyd, ttygif, ttyrec, tut]

    steps:
      - uses: cross-platform-actions/action@v0.25.0
        with:
          operating_system: netbsd
          version: 9.3
          shell: bash
          run: |
            run() {
              printf "\033[0;35m==>\033[0m \033[0;32m%b\n\033[0m" "$*"
              eval "$@"
            }

            run sudo sed -i 's/#ETCCERTSDIR=/ETCCERTSDIR=/' /usr/pkg/etc/ca-certificates-dir.conf
            run sudo update-ca-certificates

            run sudo pkgin -y update
            run sudo pkgin -y install curl

            run curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
            run chmod +x ppkg

            run ./ppkg about
            run ./ppkg setup --syspm
            run ./ppkg update
            run ./ppkg install ${{ matrix.pkg }}

            for item in $(./ppkg ls-installed)
            do
                ./ppkg pack "$item"

                PACKAGE_SUMMARY="$(./ppkg info-installed "$item" summary)"
                PACKAGE_WEB_URL="$(./ppkg info-installed "$item" web-url)"
                PACKAGE_VERSION="$(./ppkg info-installed "$item" version)"

                PACKAGE_NAME="${item#*/}"

                PACKAGE_FILENAME="$(ls $PACKAGE_NAME-$PACKAGE_VERSION-*.tar.xz)"

                PACKAGE_BIN_SHA="$(./ppkg run sha256sum "$PACKAGE_FILENAME" | cut -d ' ' -f1)"

                PACKAGE_BIN_URL="https://github.com/${{ github.repository }}/releases/download/@TAGNAME@/$PACKAGE_FILENAME"

                cat > "$PACKAGE_NAME.yml" <<EOF
            summary: $PACKAGE_SUMMARY
            webpage: $PACKAGE_WEB_URL
            version: $PACKAGE_VERSION
            bin-url: $PACKAGE_BIN_URL
            bin-sha: $PACKAGE_BIN_SHA
            EOF
            done

      - run: ls

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg }}
          path: |
            ./*.tar.xz
            ./*.yml

  build5:
    strategy:
      fail-fast: false
      matrix:
        pkg: [tweego, twolame, typos, uctags, unbound, unixodbc, unrar, unzip, uppm, uppm@0.15.1, uppm@0.15.2, uppm@0.15.4, usbutils, utf8.h, utfcpp, util-linux, valijson, vegeta, virustotal-cli, viu, volta, vsftpd, w3m, walk, wasm-pack, wasm3, wasmer, wasmtime, watchexec, wavpack, webhook, websocketpp, wget, wolfssl, wuzz, x264, x265, xbps, xclip, xh, xmake, xmlto, xmlutils, xmlwf, xorg-libxpresent, xorg-libxscrnsaver, xorg-libxtst, xorriso, xpup, xsltproc, xvid, xxd, yajl, yaml-cpp, yasm, yazi, ycm, youtubedr, yq, yyjson, z3, zig, zip, zlib, zlib-ng, zlog, zola, zopfli, zoxide, zsh, zstd, zsync]

    steps:
      - uses: cross-platform-actions/action@v0.25.0
        with:
          operating_system: netbsd
          version: 9.3
          shell: bash
          run: |
            run() {
              printf "\033[0;35m==>\033[0m \033[0;32m%b\n\033[0m" "$*"
              eval "$@"
            }

            run sudo sed -i 's/#ETCCERTSDIR=/ETCCERTSDIR=/' /usr/pkg/etc/ca-certificates-dir.conf
            run sudo update-ca-certificates

            run sudo pkgin -y update
            run sudo pkgin -y install curl

            run curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
            run chmod +x ppkg

            run ./ppkg about
            run ./ppkg setup --syspm
            run ./ppkg update
            run ./ppkg install ${{ matrix.pkg }}

            for item in $(./ppkg ls-installed)
            do
                ./ppkg pack "$item"

                PACKAGE_SUMMARY="$(./ppkg info-installed "$item" summary)"
                PACKAGE_WEB_URL="$(./ppkg info-installed "$item" web-url)"
                PACKAGE_VERSION="$(./ppkg info-installed "$item" version)"

                PACKAGE_NAME="${item#*/}"

                PACKAGE_FILENAME="$(ls $PACKAGE_NAME-$PACKAGE_VERSION-*.tar.xz)"

                PACKAGE_BIN_SHA="$(./ppkg run sha256sum "$PACKAGE_FILENAME" | cut -d ' ' -f1)"

                PACKAGE_BIN_URL="https://github.com/${{ github.repository }}/releases/download/@TAGNAME@/$PACKAGE_FILENAME"

                cat > "$PACKAGE_NAME.yml" <<EOF
            summary: $PACKAGE_SUMMARY
            webpage: $PACKAGE_WEB_URL
            version: $PACKAGE_VERSION
            bin-url: $PACKAGE_BIN_URL
            bin-sha: $PACKAGE_BIN_SHA
            EOF
            done

      - run: ls

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg }}
          path: |
            ./*.tar.xz
            ./*.yml

  publish:
    needs: [build1, build2, build3, build4, build5]

    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          pattern: '*'
          path: .
          merge-multiple: true

      - run: ls

      - run: |
          set -ex

          TAGNAME="$(date +%Y.%m.%d)"

          sed -i "s|@TAGNAME@|$TAGNAME|" *.yml

          mv *.yml formula/

          DIRNAME="uppm-formula-repository-netbsd-9.3-amd64-$TAGNAME"

          install -d "$DIRNAME"

          cp -r formula "$DIRNAME/"

          tar cvJf "$DIRNAME.tar.xz" "$DIRNAME"

          sha256sum *.tar.xz > sha256sums.txt

          cat > notes.md <<EOF
          these packages are created by [xcpkg](https://github.com/leleliu008/xcpkg).

          ## Environment Variables

          **following environment variables should be set for \`git\` package**

          \`\`\`bash
          export GIT_EXEC_PATH="\$GIT_INSTALL_DIR/libexec/git-core"
          export GIT_TEMPLATE_DIR="\$GIT_INSTALL_DIR/share/git-core/templates"
          \`\`\`

          **following environment variables should be set for \`file\` package**

          \`\`\`bash
          export MAGIC="\$FILE_INSTALL_DIR/share/misc/magic.mgc"
          \`\`\`

          ## sha256sum

          \`\`\`
          $(cat sha256sums.txt)
          \`\`\`
          EOF

          gh release create "$TAGNAME" *.tar.xz sha256sums.txt --title "$TAGNAME" --notes-file notes.md

          git config --global user.name  "leleliu008"
          git config --global user.email "leleliu008@gmail.com"

          git pull

          git add formula
          git commit -m "release new version $TAGNAME"
          git push origin master
